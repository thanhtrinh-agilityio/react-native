name: Run Tests + EAS Matrix Build

on:
  push:
    branches: ['feat/practice-chat-rak-gpt']
  pull_request:
    branches: ['feat/practice-chat-rak-gpt']
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20.18.1
      - run: yarn install --frozen-lockfile
      - run: yarn test

  eas-build:
    name: 🚀 EAS Build - ${{ matrix.mode }} - ${{ matrix.profile }}
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        mode: [local, remote]
        profile: [preview, production]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install EAS CLI
        run: npm install -g eas-cli

      # ✅ Create .env file for preview only
      - name: 🛠️ Create .env (preview only)
        if: matrix.profile == 'preview'
        run: |
          cat <<EOF > .env
          EXPO_PUBLIC_OPENROUTER_API_KEY=${{ secrets.EXPO_PUBLIC_OPENROUTER_API_KEY }}
          EXPO_PUBLIC_OPENROUTER_MODEL=${{ secrets.EXPO_PUBLIC_OPENROUTER_MODEL }}
          EXPO_PUBLIC_OPENROUTER_API_URL=${{ secrets.EXPO_PUBLIC_OPENROUTER_API_URL }}
          EXPO_PUBLIC_OPENROUTER_TITLE=${{ secrets.EXPO_PUBLIC_OPENROUTER_TITLE }}
          EXPO_PUBLIC_STORYBOOK_ENABLED=${{ secrets.EXPO_PUBLIC_STORYBOOK_ENABLED }}
          EOF

      # ✅ Run preview builds
      - name: 🚀 EAS Build (preview)
        if: matrix.profile == 'preview'
        id: build-preview
        run: |
          if [ "${{ matrix.mode }}" = "local" ]; then
            eas build --platform android --local --non-interactive --profile preview --wait
          else
            BUILD_URL=$(eas build --platform android --non-interactive --profile preview --wait | tee /dev/stderr | grep -o 'https://expo.dev/accounts[^ ]*')
            echo "BUILD_URL=$BUILD_URL" >> $GITHUB_OUTPUT
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_OPENROUTER_API_KEY: ${{ secrets.EXPO_PUBLIC_OPENROUTER_API_KEY }}
          EXPO_PUBLIC_OPENROUTER_MODEL: ${{ secrets.EXPO_PUBLIC_OPENROUTER_MODEL }}
          EXPO_PUBLIC_OPENROUTER_API_URL: ${{ secrets.EXPO_PUBLIC_OPENROUTER_API_URL }}
          EXPO_PUBLIC_OPENROUTER_TITLE: ${{ secrets.EXPO_PUBLIC_OPENROUTER_TITLE }}
          EXPO_PUBLIC_STORYBOOK_ENABLED: ${{ secrets.EXPO_PUBLIC_STORYBOOK_ENABLED }}

      # ✅ Run production builds
      - name: 🚀 EAS Build (production)
        if: matrix.profile == 'production'
        id: build-production
        run: |
          if [ "${{ matrix.mode }}" = "local" ]; then
            eas build --platform android --local --non-interactive --profile production --wait
          else
            BUILD_URL=$(eas build --platform android --non-interactive --profile production --wait | tee /dev/stderr | grep -o 'https://expo.dev/accounts[^ ]*')
            echo "BUILD_URL=$BUILD_URL" >> $GITHUB_OUTPUT
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # ✅ Upload local APKs
      - name: 📤 Upload APK
        if: matrix.mode == 'local'
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.profile }}-${{ matrix.mode }}
          path: ${{ github.workspace }}/build-*.apk

      # ✅ Add remote build link (preview)
      - name: 📎 Add Expo Build URL (preview)
        if: matrix.mode == 'remote' && matrix.profile == 'preview'
        run: |
          echo "### 🚀 [Expo Preview Build](${{ steps.build-preview.outputs.BUILD_URL }})" >> $GITHUB_STEP_SUMMARY

      # ✅ Add remote build link (production)
      - name: 📎 Add Expo Build URL (production)
        if: matrix.mode == 'remote' && matrix.profile == 'production'
        run: |
          echo "### 🚀 [Expo Production Build](${{ steps.build-production.outputs.BUILD_URL }})" >> $GITHUB_STEP_SUMMARY
