name: EAS Build

on:
  push:
    branches: ['feat/practice-chat-rak-gpt']
  pull_request:
    branches: ['feat/practice-chat-rak-gpt']
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run JS tests
        run: yarn test

  eas-build:
    name: 🚀 EAS Build (Expo Android)
    runs-on: ubuntu-latest
    needs: test # ⬅️ Wait for 'test' job to pass
    if: ${{ github.event_name != 'pull_request' }} # ⬅️ Only build on push, not PR
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ♻️ Yarn Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ♻️ Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: 📦 Check if dependencies changed
        id: deps-check
        run: |
          if git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep -qE '(^|/)package\.json$|(^|/)yarn\.lock$'; then
            echo "Dependencies changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Dependencies unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true' || steps.deps-check.outputs.changed == 'true'
        run: yarn install --frozen-lockfile

      - name: 🧪 Install latest EAS CLI
        run: npm install -g eas-cli@latest

      - name: 🔐 Authenticate with Expo
        run: eas whoami
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 🚀 EAS Build (Android)
        run: eas build --platform android --non-interactive --profile production --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: eas-release-apk
          path: app-eas.apk
